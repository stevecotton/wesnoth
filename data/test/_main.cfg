#textdomain wesnoth-test

#ifndef DONT_RELOAD_CORE

{themes/}

# Load core wml for tests including macros and units
{core}

[textdomain]
    name="wesnoth"
[/textdomain]
[textdomain]
    name="wesnoth-lib"
[/textdomain]

#endif

[textdomain]
    name="wesnoth-test"
[/textdomain]

#ifdef TEST

[binary_path]
    path="data/test"
[/binary_path]

#Load test macros
{test/macros}

[lua]
    code = "wesnoth.dofile 'test/lua/wml_tags.lua'"
[/lua]

#Load test scenarios from 1.16
{test/scenarios}

# Load automated test scenarios from 1.17+
#
# They can be run individually with Wesnoth's `-u` command line option, but are usually run by
# the run_wml_tests script based on the list in wml_test_schedule.
#ifhave test/scenarios/behavioral_tests
	{test/scenarios/behavioral_tests}
#endif
#ifhave test/scenarios/cve_tests
	{test/scenarios/cve_tests}
#endif
#ifhave test/scenarios/lua_tests
	{test/scenarios/lua_tests}
#endif
#ifhave test/scenarios/lua_tests/ai
	{test/scenarios/lua_tests/ai}
#endif
#ifhave test/scenarios/lua_tests/filesystem
	{test/scenarios/lua_tests/filesystem}
#endif
#ifhave test/scenarios/lua_tests/functional
	{test/scenarios/lua_tests/functional}
#endif
#ifhave test/scenarios/lua_tests/gui
	{test/scenarios/lua_tests/gui}
#endif
#ifhave test/scenarios/lua_tests/gui/widget
	{test/scenarios/lua_tests/gui/widget}
#endif
#ifhave test/scenarios/lua_tests/location_set
	{test/scenarios/lua_tests/location_set}
#endif
#ifhave test/scenarios/lua_tests/mathx
	{test/scenarios/lua_tests/mathx}
#endif
#ifhave test/scenarios/lua_tests/stringx
	{test/scenarios/lua_tests/stringx}
#endif
#ifhave test/scenarios/lua_tests/wesnoth
	{test/scenarios/lua_tests/wesnoth}
#endif
#ifhave test/scenarios/lua_tests/wesnoth/audio
	{test/scenarios/lua_tests/wesnoth/audio}
#endif
#ifhave test/scenarios/lua_tests/wesnoth/game_events
	{test/scenarios/lua_tests/wesnoth/game_events}
#endif
#ifhave test/scenarios/lua_tests/wesnoth/interface
	{test/scenarios/lua_tests/wesnoth/interface}
#endif
#ifhave test/scenarios/lua_tests/wesnoth/map
	{test/scenarios/lua_tests/wesnoth/map}
#endif
#ifhave test/scenarios/lua_tests/wesnoth/paths
	{test/scenarios/lua_tests/wesnoth/paths}
#endif
#ifhave test/scenarios/lua_tests/wesnoth/schedule
	{test/scenarios/lua_tests/wesnoth/schedule}
#endif
#ifhave test/scenarios/lua_tests/wesnoth/sides
	{test/scenarios/lua_tests/wesnoth/sides}
#endif
#ifhave test/scenarios/lua_tests/wesnoth/sync
	{test/scenarios/lua_tests/wesnoth/sync}
#endif
#ifhave test/scenarios/lua_tests/wesnoth/units
	{test/scenarios/lua_tests/wesnoth/units}
#endif
#ifhave test/scenarios/lua_tests/wml
	{test/scenarios/lua_tests/wml}
#endif
#ifhave test/scenarios/lua_tests/wml-utils
	{test/scenarios/lua_tests/wml-utils}
#endif
#ifhave test/scenarios/macro_tests
	{test/scenarios/macro_tests}
#endif
#ifhave test/scenarios/test_tests
	{test/scenarios/test_tests}
#endif
#ifhave test/scenarios/wml_tests/FilterWML
	{test/scenarios/wml_tests/FilterWML}
#endif
#ifhave test/scenarios/wml_tests/ScenarioWML
	{test/scenarios/wml_tests/ScenarioWML}
#endif
#ifhave test/scenarios/wml_tests/ScenarioWML/AiWML
	{test/scenarios/wml_tests/ScenarioWML/AiWML}
#endif
#ifhave test/scenarios/wml_tests/ScenarioWML/EffectWML
	{test/scenarios/wml_tests/ScenarioWML/EffectWML}
#endif
#ifhave test/scenarios/wml_tests/ScenarioWML/EventWML
	{test/scenarios/wml_tests/ScenarioWML/EventWML}
#endif
#ifhave test/scenarios/wml_tests/ScenarioWML/EventWML/ActionWML
	{test/scenarios/wml_tests/ScenarioWML/EventWML/ActionWML}
#endif
#ifhave test/scenarios/wml_tests/ScenarioWML/EventWML/ActionWML/ConditionalActionsWML
	{test/scenarios/wml_tests/ScenarioWML/EventWML/ActionWML/ConditionalActionsWML}
#endif
#ifhave test/scenarios/wml_tests/ScenarioWML/EventWML/ActionWML/DirectActionsWML
	{test/scenarios/wml_tests/ScenarioWML/EventWML/ActionWML/DirectActionsWML}
#endif
#ifhave test/scenarios/wml_tests/ScenarioWML/EventWML/ActionWML/InterfaceActionsWML
	{test/scenarios/wml_tests/ScenarioWML/EventWML/ActionWML/InterfaceActionsWML}
#endif
#ifhave test/scenarios/wml_tests/ScenarioWML/EventWML/ActionWML/InternalActionsWML
	{test/scenarios/wml_tests/ScenarioWML/EventWML/ActionWML/InternalActionsWML}
#endif
#ifhave test/scenarios/wml_tests/ScenarioWML/MusicListWML
	{test/scenarios/wml_tests/ScenarioWML/MusicListWML}
#endif
#ifhave test/scenarios/wml_tests/ScenarioWML/SideWML
	{test/scenarios/wml_tests/ScenarioWML/SideWML}
#endif
#ifhave test/scenarios/wml_tests/ScenarioWML/TimeWML
	{test/scenarios/wml_tests/ScenarioWML/TimeWML}
#endif
#ifhave test/scenarios/wml_tests/TerrainWML
	{test/scenarios/wml_tests/TerrainWML}
#endif
#ifhave test/scenarios/wml_tests/UnitsWML
	{test/scenarios/wml_tests/UnitsWML}
#endif
#ifhave test/scenarios/wml_tests/UnitsWML/AbilitiesWML
	{test/scenarios/wml_tests/UnitsWML/AbilitiesWML}
#endif
#ifhave test/scenarios/wml_tests/UnitsWML/AbilitiesWML/heals
	{test/scenarios/wml_tests/UnitsWML/AbilitiesWML/heals}
#endif
#ifhave test/scenarios/wml_tests/UnitsWML/AbilitiesWML/hides
	{test/scenarios/wml_tests/UnitsWML/AbilitiesWML/hides}
#endif
#ifhave test/scenarios/wml_tests/UnitsWML/AbilitiesWML/illuminates
	{test/scenarios/wml_tests/UnitsWML/AbilitiesWML/illuminates}
#endif
#ifhave test/scenarios/wml_tests/UnitsWML/AbilitiesWML/leadership
	{test/scenarios/wml_tests/UnitsWML/AbilitiesWML/leadership}
#endif
#ifhave test/scenarios/wml_tests/UnitsWML/AbilitiesWML/regenerate
	{test/scenarios/wml_tests/UnitsWML/AbilitiesWML/regenerate}
#endif
#ifhave test/scenarios/wml_tests/UnitsWML/AbilitiesWML/resistance
	{test/scenarios/wml_tests/UnitsWML/AbilitiesWML/resistance}
#endif
#ifhave test/scenarios/wml_tests/UnitsWML/AbilitiesWML/skirmisher
	{test/scenarios/wml_tests/UnitsWML/AbilitiesWML/skirmisher}
#endif
#ifhave test/scenarios/wml_tests/UnitsWML/AbilitiesWML/teleport
	{test/scenarios/wml_tests/UnitsWML/AbilitiesWML/teleport}
#endif
#ifhave test/scenarios/wml_tests/UnitsWML/Attacks
	{test/scenarios/wml_tests/UnitsWML/Attacks}
#endif
#ifhave test/scenarios/wml_tests/WesnothFormulaLanguage
	{test/scenarios/wml_tests/WesnothFormulaLanguage}
#endif

# Manual tests, to run with Wesnoth's `-t <testname>` option, or by binding a hotkey for the
# main menu's "Choose Test Scenario" option.
#
# Many of these are closer to workbenches than tests, allowing developers to do some action
# that isn't automated, and then to find out whether the result matched the expectation.
#ifhave test/scenarios/manual_tests
	{test/scenarios/manual_tests}
#endif

# Some unit_types that are only used for tests.
#ifhave test/units.cfg
	{test/units.cfg}
#endif

#endif

#ifndef DONT_RELOAD_CORE
[binary_path]
    path=data/core
[/binary_path]

{game_config.cfg}
#endif
