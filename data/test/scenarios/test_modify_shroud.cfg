#textdomain wesnoth-test

#define ASSERT_SHROUD_DATA DATA
[lua]
    code=<<
        local data = (...).data
        unit_test.assert_equal(data, wesnoth.sides[1].shroud_data, 'data equal')
    >>
    [args]
        data={DATA}
    [/args]
[/lua]
#enddef

# Verifies starting shroud is what we expect it to be.
# If this test fails, none of the other shroud tests can be trusted.
{TEST_SHROUD_SCEN test_shroud_init (
    [event]
        name=start
        {ASSERT_SHROUDED x=0-2 true}
        {ASSERT_SHROUDED x,y=3,0 true}
        {ASSERT_SHROUDED x,y=3,6-9 true}
        {ASSERT_SHROUDED x,y=3,1-5 false}
        {ASSERT_SHROUDED x,y=4,6-9 true}
        {ASSERT_SHROUDED x,y=4,0-5 false}
        {ASSERT_SHROUDED x,y=5,7-9 true}
        {ASSERT_SHROUDED x,y=5,0-6 false}
        {ASSERT_SHROUDED x,y=6,7-9 true}
        {ASSERT_SHROUDED x,y=6,0-6 false}
        {ASSERT_SHROUDED x,y=7,8,9 true}
        {ASSERT_SHROUDED x,y=7,0-7 false}
        {ASSERT_SHROUDED x,y=8,7-9 true}
        {ASSERT_SHROUDED x,y=8,0-6 false}
        {ASSERT_SHROUDED x,y=9,7-9 true}
        {ASSERT_SHROUDED x,y=9,0-6 false}
        {ASSERT_SHROUDED x,y=10,6-9 true}
        {ASSERT_SHROUDED x,y=10,0-5 false}
        {ASSERT_SHROUDED x,y=11,0 true}
        {ASSERT_SHROUDED x,y=11,6-9 true}
        {ASSERT_SHROUDED x,y=11,1-5 false}
        {ASSERT_SHROUDED x=12-17 true}
        {ASSERT_SHROUD_DATA "|
|
|
|011111
|111111
|1111111
|1111111
|11111111
|1111111
|1111111
|111111
|011111
"}
        {SUCCEED}
    [/event]
)}

{TEST_SHROUD_SCEN test_shroud_place_wml (
    [event]
        name=start
        [place_shroud]
            side=1
            x,y=7,5
        [/place_shroud]
        {ASSERT_SHROUDED x,y=7,5 true}
        {SUCCEED}
    [/event]
)}

{TEST_SHROUD_SCEN test_shroud_place_lua (
    [event]
        name=start
        [lua]
            code=<<wesnoth.sides.place_shroud(1, {{7,5}})>>
        [/lua]
        {ASSERT_SHROUDED x,y=7,5 true}
        {SUCCEED}
    [/event]
)}

{TEST_SHROUD_SCEN test_shroud_place_lua_data (
    [event]
        name=start
        [lua]
            code=<<
				local ls = wesnoth.require "location_set"
				local clear = ls.of_shroud_data((...).data)
				local shroud = ls.create()
				for x,y in wesnoth.current.map:iter() do
					if not clear(x,y) then
						shroud:insert(x,y)
					end
				end
				wesnoth.sides.place_shroud(1, shroud:to_pairs())
            >>
            [args]
                data="|
|
|
|011111
|111111
|1111111
|1100011
|11010111
|1100011
|1111111
|111111
|011111
"
            [/args]
        [/lua]
        {ASSERT_SHROUDED x,y=6,2-4 true}
        {ASSERT_SHROUDED x,y=8,2-4 true}
        {ASSERT_SHROUDED x,y=6-8,2 true}
        {ASSERT_SHROUDED x,y=6-8,4 true}
        {SUCCEED}
    [/event]
)}

{TEST_SHROUD_SCEN test_shroud_override_data (
    [event]
        name=start
        [lua]
            code=<<
                local locs = wesnoth.map.parse_bitmap((...).data)
                wesnoth.sides.override_shroud(1, locs)
            >>
            [args]
                data="|
|
|
|
|
|
|
|
|
|
|
|
|00111
|000111
|00111
"
            [/args]
        [/lua]
        {ASSERT_SHROUDED x,y=3,1-5 true}
        {ASSERT_SHROUDED x,y=4,0-5 true}
        {ASSERT_SHROUDED x,y=5,0-6 true}
        {ASSERT_SHROUDED x,y=6,0-6 true}
        {ASSERT_SHROUDED x,y=7,0-7 true}
        {ASSERT_SHROUDED x,y=8,0-6 true}
        {ASSERT_SHROUDED x,y=9,0-6 true}
        {ASSERT_SHROUDED x,y=10,0-5 true}
        {ASSERT_SHROUDED x,y=11,1-5 true}
        
        {ASSERT_SHROUDED x,y=12,2-4 false}
        {ASSERT_SHROUDED x,y=13,3-5 false}
        {ASSERT_SHROUDED x,y=14,2-4 false}
        {SUCCEED}
    [/event]
)}

{TEST_SHROUD_SCEN test_shroud_override_all (
    [event]
        name=start
        [lua]
            code=<<wesnoth.sides.override_shroud(1, {})>>
        [/lua]
        {ASSERT_SHROUDED x,y=0-17,0-9 true}
        {SUCCEED}
    [/event]
)}

{TEST_SHROUD_SCEN test_shroud_remove_wml (
    [event]
        name=start
        [remove_shroud]
            side=1
            x,y=13,8
        [/remove_shroud]
        {ASSERT_SHROUDED x,y=13,8 false}
        {SUCCEED}
    [/event]
)}

{TEST_SHROUD_SCEN test_shroud_remove_lua (
    [event]
        name=start
        [lua]
            code=<<wesnoth.sides.remove_shroud(1, {{13,8}})>>
        [/lua]
        {ASSERT_SHROUDED x,y=13,8 false}
        {SUCCEED}
    [/event]
)}

{TEST_SHROUD_SCEN test_shroud_remove_lua_data (
    [event]
        name=start
        [lua]
            code=<<
                local locs = wesnoth.map.parse_bitmap((...).data)
                wesnoth.sides.remove_shroud(1, locs)
            >>
            [args]
                data="|
|
|
|
|
|
|
|
|
|
|
|
|00111
|000111
|00111
"
            [/args]
        [/lua]
        {ASSERT_SHROUDED x,y=3,1-5 false}
        {ASSERT_SHROUDED x,y=4,0-5 false}
        {ASSERT_SHROUDED x,y=5,0-6 false}
        {ASSERT_SHROUDED x,y=6,0-6 false}
        {ASSERT_SHROUDED x,y=7,0-7 false}
        {ASSERT_SHROUDED x,y=8,0-6 false}
        {ASSERT_SHROUDED x,y=9,0-6 false}
        {ASSERT_SHROUDED x,y=10,0-5 false}
        {ASSERT_SHROUDED x,y=11,1-5 false}
        
        {ASSERT_SHROUDED x,y=12,2-4 false}
        {ASSERT_SHROUDED x,y=13,3-5 false}
        {ASSERT_SHROUDED x,y=14,2-4 false}
        {SUCCEED}
    [/event]
)}

{TEST_SHROUD_SCEN test_shroud_modify_wml (
    [event]
        name=start
        [modify_side]
            side=1
            shroud_data="|
|
|
|011111
|111111
|1111111
|1111111
|11111111
|1111111
|1111111
|111111
|011111
|00111
|000111
|00111
"
        [/modify_side]
        {ASSERT_SHROUDED x,y=12,2-4 false}
        {ASSERT_SHROUDED x,y=13,3-5 false}
        {ASSERT_SHROUDED x,y=14,2-4 false}
        {SUCCEED}
    [/event]
)}

{TEST_SHROUD_SCEN test_shroud_modify_lua (
    [event]
        name=start
        [lua]
            code=<<
                wesnoth.sides[1].shroud_data = [[|
|
|
|011111
|111111
|1111111
|1111111
|11111111
|1111111
|1111111
|111111
|011111
|00111
|000111
|00111
]]
            >>
        [/lua]
        {ASSERT_SHROUDED x,y=12,2-4 false}
        {ASSERT_SHROUDED x,y=13,3-5 false}
        {ASSERT_SHROUDED x,y=14,2-4 false}
        {SUCCEED}
    [/event]
)}
